package aplicacao_cadastro_alunos;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import aplicacao_cadastro_alunos.Aluno;
import java.awt.Dimension;
import java.io.*;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import java.util.Comparator;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafae
 */
public class Interface_Menu extends javax.swing.JFrame {
    List<Aluno> listAlunos = new ArrayList<>();
    AlunoDAOimpl alunoMod = new AlunoDAOimpl();
   // Comparator<Aluno> comparadorIdade = new Comparator<Aluno>();
    File file = new File("armazena.csv");
    ListAlunos list = new ListAlunos();
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    View banco = new View();
    
    /**
     * Creates new form Interface_Menu
     */
    public Interface_Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        txtMatricula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtData = new javax.swing.JFormattedTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        txtCPF = new javax.swing.JFormattedTextField();

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        jButton7.setText("jButton7");

        jButton8.setText("jButton8");

        jButton9.setText("jButton9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Menu Escola");
        jLabel1.setToolTipText("");
        jLabel1.setName(""); // NOI18N

        jButton1.setText("Novo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InserirAluno(evt);
            }
        });

        jButton2.setText("Pesquisar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PesquisarAluno(evt);
            }
        });

        jButton3.setText("Excluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirAluno(evt);
            }
        });

        jButton4.setText("Lista Alunos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarLista(evt);
            }
        });

        jButton5.setText("Aluno mais velho");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscaMaisVelho(evt);
            }
        });

        jButton6.setText("Aluno mais novo");
        jButton6.setToolTipText("");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscaMaisNovo(evt);
            }
        });

        jLabel2.setText("MATRICULA");

        jLabel3.setText("NOME");

        jLabel4.setText("DATA DE NASCIMENTO");

        jLabel5.setText("TELEFONE");

        jLabel6.setText("CPF");

        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-## ")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCPF)
                                .addGap(52, 52, 52))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMatricula)
                                    .addComponent(txtNome))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)))
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //FUNCIONANDO 100%
    private void InserirAluno(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InserirAluno
        
        //verifica se algum campo ficou vazio
       if(!alunoMod.verificaPreenchimento(txtMatricula.getText(), txtNome.getText(), txtTelefone.getText(), txtCPF.getText())){
            return;
       }
        
        
        String matricula = txtMatricula.getText().trim(); //trim tira espacos em branco
        String nome = txtNome.getText().trim();
        String telefone = txtTelefone.getText().trim();
        String str2 = txtCPF.getText().trim();
        char[] cpf = str2.toCharArray();
        
        int idade = 0;
        LocalDate dataValidada = null;
        
        //verifica se a data foi adicionada certo
        String dataVerifica = txtData.getText();
        
        if(alunoMod.validarData(dataVerifica)){
          dataValidada = LocalDate.parse(txtData.getText(), formatter);
          idade = alunoMod.calcularIdade(dataValidada);
        }
        else{
          JOptionPane.showMessageDialog(null, "Data inválida! Por favor corrija.");
          txtData.requestFocus(); //o teclado volta para o local a ser alterado
          return; //impede do codigo ser executado
        }
        
        Aluno alunoInserir = new Aluno(nome, matricula, idade,dataValidada,telefone,cpf);
        alunoMod.inserirAluno(listAlunos, alunoInserir);
        
        // Limpa os campos após inserção
        txtMatricula.setText("");
        txtNome.setText("");
        txtTelefone.setText("");
        txtCPF.setText("");
        txtData.setText("");
        
        txtMatricula.requestFocus(); // a agulha de  digitação vai para o primeiro
    }//GEN-LAST:event_InserirAluno

    private void PesquisarAluno(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PesquisarAluno
      String matriculaPesquisa = JOptionPane.showInputDialog(null, "Digite a matrícula do aluno:", "Pesquisa de Aluno", JOptionPane.QUESTION_MESSAGE);

        if (matriculaPesquisa != null && !matriculaPesquisa.trim().isEmpty()) {
            Aluno alunoEncontrado = alunoMod.pesquisarAluno(listAlunos, matriculaPesquisa.trim());

            if (alunoEncontrado != null) {
                // Cria tabela só com esse aluno
                Object[][] dados = {
                    {
                        alunoEncontrado.getMatricula(),
                        alunoEncontrado.getNome(),
                        alunoEncontrado.getData(),
                        alunoEncontrado.getIdade(),
                        alunoEncontrado.getTelefone(),
                        String.valueOf(alunoEncontrado.getCpf())
                    }
                };

                String[] colunas = {"Matrícula", "Nome", "Data de Nascimento", "Idade", "Telefone", "CPF"};

                JTable tabelaResultado = new JTable(dados, colunas);
                JScrollPane scrollPane = new JScrollPane(tabelaResultado);
                scrollPane.setPreferredSize(new Dimension(500, 70));
                JOptionPane.showMessageDialog(null, scrollPane, "Resultado da Pesquisa", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Aluno não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Matrícula não informada!", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_PesquisarAluno

    private void ExcluirAluno(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirAluno
        String matriculaExcluir = JOptionPane.showInputDialog(null, "Digite a matrícula do aluno que deseja excluir:");
        
        if (matriculaExcluir != null && !matriculaExcluir.trim().isEmpty()) {
            alunoMod.removerAluno(listAlunos, matriculaExcluir.trim());
        }
    }//GEN-LAST:event_ExcluirAluno

    private void BuscaMaisVelho(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscaMaisVelho
        //Verifica se a lista de alunos não está vazia
        if (listAlunos == null || listAlunos.isEmpty()) {
            JOptionPane.showMessageDialog(null, "A lista de alunos está vazia.", "Nenhum Aluno Encontrado", JOptionPane.INFORMATION_MESSAGE);
            return; // Sai da função se não houver alunos
        }

        alunoMod.ordenarListaAluno(listAlunos);

        Aluno alunoMaisVelho = listAlunos.get(listAlunos.size() - 1);

       
        Object[][] dados = {
            {
                alunoMaisVelho.getMatricula(),
                alunoMaisVelho.getNome(),
                alunoMaisVelho.getData(), 
                alunoMaisVelho.getIdade(),
                alunoMaisVelho.getTelefone(),
                String.valueOf(alunoMaisVelho.getCpf()) 
            }
        };

        
        String[] colunas = {"Matrícula", "Nome", "Data de Nascimento", "Idade", "Telefone", "CPF"};

 
        JTable tabelaResultado = new JTable(dados, colunas);
   
        tabelaResultado.setEnabled(false);
        tabelaResultado.getTableHeader().setReorderingAllowed(false);
        tabelaResultado.getTableHeader().setResizingAllowed(false);

        JScrollPane scrollPane = new JScrollPane(tabelaResultado);
        scrollPane.setPreferredSize(new Dimension(650, 70));

       
        JOptionPane.showMessageDialog(null, scrollPane, "Aluno Mais Velho", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_BuscaMaisVelho

    private void BuscaMaisNovo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscaMaisNovo
        if (listAlunos == null || listAlunos.isEmpty()) {
            JOptionPane.showMessageDialog(null, "A lista de alunos está vazia.", "Nenhum Aluno Encontrado", JOptionPane.INFORMATION_MESSAGE);
            return; // Sai da função se não houver alunos
        }
        
        alunoMod.ordenarListaAluno(listAlunos);
        Aluno alunoMaisNovo = listAlunos.get(0);
        
        Object[][] dados = {
            {
                alunoMaisNovo.getMatricula(),
                alunoMaisNovo.getNome(),
                alunoMaisNovo.getData(), // Assumindo que getData() retorna uma String ou é formatado adequadamente
                alunoMaisNovo.getIdade(),
                alunoMaisNovo.getTelefone(),
                String.valueOf(alunoMaisNovo.getCpf()) // Converte o CPF para String
            }
        };

        String[] colunas = {"Matrícula", "Nome", "Data de Nascimento", "Idade", "Telefone", "CPF"};
        JTable tabelaResultado = new JTable(dados, colunas);
        tabelaResultado.setEnabled(false);
        tabelaResultado.getTableHeader().setReorderingAllowed(false);
        tabelaResultado.getTableHeader().setResizingAllowed(false);
        JScrollPane scrollPane = new JScrollPane(tabelaResultado);
        scrollPane.setPreferredSize(new Dimension(650, 70));
        
        JOptionPane.showMessageDialog(null, scrollPane, "Aluno Mais Novo", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_BuscaMaisNovo

    private void MostrarLista(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarLista
        list.setVisible(true);
        list.carregaTabela(listAlunos);
       
//JOptionPane.showMessageDialog(null, listAlunos.toString(),"Lista de Alunos Cadastrados", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_MostrarLista


    
    private void salvarArquivo(File file, Aluno aluno){
       try (FileWriter fw = new FileWriter(file, true); BufferedWriter bw = new BufferedWriter(fw)) {
                        if (!listAlunos.contains(aluno)) {
                            listAlunos.add(aluno);
                            bw.write(aluno.toString());
                            bw.newLine();
                        } else {
                            throw new RuntimeException("Elemento adicionado");
                        }

                    } catch (Exception e) {
                        e.printStackTrace();
                    }        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Interface_Menu menu = new Interface_Menu();
                try {
                menu.banco.retornaValoresBanco(menu.banco.conectar(), menu.listAlunos);
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Erro ao carregar dados do banco: " + e.getMessage());
                } 
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {                 
                menu.setVisible(true);
            }
        });
    }
                

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    public javax.swing.JButton jButton5;
    public javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

}
